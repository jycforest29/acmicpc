## 코드 참고 여부
# 혼자품

## 문제 풀이 방식
# 일단 그리디 알고리즘이 될 수 없음. 5는 3의 배수가 아니기에 그리디 보장 안됨. ex. 6일때 
# 결국 모든 경우의 수를 따져봐야할듯.
 
## 슈도 코드
# n 입력받음
# 각 경우마다 필요한 봉지수 저장할 배열 초기화
# 0부터 n을 5로 나눈 몫까지
#     임시변수 = n - 5*인덱스
#     만약 임시변수를 3으로 나눈 나머지가 0이라면
#         배열에 인덱스+임시변수를 3으로 나눈 몫 추가
# 배열에 원소가 존재할 경우
    # 배열 중 최소값 출력
# 아니면
    # -1 출력

## 어려웠던 부분

## 걸린 시간
# 대략 26분?

import sys

n = int(sys.stdin.readline())
tmp = []
quad = n // 5
for i in range(quad+1):
    nTmp = n - i*5
    if nTmp % 3 == 0:
        tmp.append(nTmp//3+i)
if len(tmp) != 0:
    print(min(tmp))
else:
    print(-1)
