## 코드 참고 여부
# 풀이 참고함

## 문제 풀이 방식
# 나머지가 같을때까지만 찾으면 나머지는 계속 동일한 수 곱하기에 나머지가 반복됨
    # -> 이런식으로 풀면 안됨
# 3**5 = (3**2)*(3**2)*(3**1)
# 3**4 = (3**2)*(3**2)
# 3**3 = (3**1)*(3**1)*(3**1)
# 3**2 = (3**1)*(3**1)
# 3**1 = (3**1) 

## 슈도 코드

## 배운점 
# f(a, b-2)*f(a, b-2)로 하면 재귀 초과함
# 계산속도
    # 파이썬은 cpu 레지스터를 사용해 곱셈을 수행하기 때문에 표현 가능 범위 내에서는
    # 항상 동일한 곱셈의 시간이 걸리는 c나 c++과 달리 큰 수의 곱셈을
    # 계산하기 위해서 2진수 단위별로 끊어서 저장하고 빠른 곱셈 알고리즘을 통해
    # 연산을 직접 구현함. 따라서 자리수가 늘어나면 그에 비례하는 것 이상으로 많은 시간이 듬.

# 모듈러 연산의 분배법칙
    # (A+B)%C = ((A%C)+(B%C))%C
    # (A*B)%C = ((A%C)*(B%C))%C
    # (A-B)%C = ((A%C)-(B%C))%C # 음수가 나오는 것 방지
    # 나눗셈은 나눗셈을 곱셈으로 바꿔줌

## 걸린 시간

import sys

def f(a, b, c):
    # 바닥조건
    if b == 1:
        return a%c
    # b가 짝수일 때
    elif b % 2 == 0:
        return f(a, b//2, c)**2%c
    # b가 1이아닌 홀수일 때
    else:
        return f(a, b//2, c)**2*a%c

a, b, c = map(int, sys.stdin.readline().split())

print(f(a, b, c))
